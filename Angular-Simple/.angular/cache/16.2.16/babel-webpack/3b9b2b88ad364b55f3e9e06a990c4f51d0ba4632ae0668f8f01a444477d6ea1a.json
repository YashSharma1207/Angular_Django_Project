{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../navbar/navbar.component\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.form = {\n      data: {},\n      message: ''\n    };\n  }\n  signIn() {\n    console.log('in sign in function');\n    console.log('form.data:', this.form.data);\n    if (this.form.data.loginId == 'admin' && this.form.data.password == 'admin') {\n      this.router.navigateByUrl('welcome');\n    } else {\n      this.form.message = 'Login ID & Password Invalid';\n    }\n  }\n  signUp() {\n    this.router.navigateByUrl('signup');\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 26,\n      vars: 3,\n      consts: [[\"align\", \"center\"], [\"color\", \"red\"], [\"type\", \"text\", \"name\", \"loginId\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-navbar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"h3\")(5, \"font\", 1);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"table\")(8, \"tr\")(9, \"th\");\n          i0.ɵɵtext(10, \"Login ID: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"td\")(12, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.form.data.loginId = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(13, \"tr\")(14, \"th\");\n          i0.ɵɵtext(15, \"Password: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"td\")(17, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.form.data.password = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"tr\");\n          i0.ɵɵelement(19, \"th\");\n          i0.ɵɵelementStart(20, \"td\")(21, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n            return ctx.signIn();\n          });\n          i0.ɵɵtext(22, \"signIn\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(23, \" \\u00A0 \");\n          i0.ɵɵelementStart(24, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n            return ctx.signUp();\n          });\n          i0.ɵɵtext(25, \"signUp\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate(ctx.form.message);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.form.data.loginId);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.form.data.password);\n        }\n      },\n      dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NavbarComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","router","form","data","message","signIn","console","log","loginId","password","navigateByUrl","signUp","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_12_listener","$event","LoginComponent_Template_input_ngModelChange_17_listener","LoginComponent_Template_button_click_21_listener","LoginComponent_Template_button_click_24_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["D:\\RAY'S\\Project\\Angular_Django_Project\\Angular_Simple\\src\\app\\login\\login.component.ts","D:\\RAY'S\\Project\\Angular_Django_Project\\Angular_Simple\\src\\app\\login\\login.component.html"],"sourcesContent":["\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  \n  form: any = {\n    data: {},\n    message: '',\n  }\n\n  constructor(private router:Router) {\n\n  }\n\n  signIn() {\n    console.log('in sign in function')\n    console.log('form.data:', this.form.data)\n    \n\n    if (this.form.data.loginId == 'admin' && this.form.data.password == 'admin') {\n      this.router.navigateByUrl('welcome')\n    } else {\n      this.form.message = 'Login ID & Password Invalid'\n    }\n  }\n\n  signUp() {\n    this.router.navigateByUrl('signup')\n  }\n\n}\n","<app-navbar></app-navbar>\n<div align=\"center\">\n    <h1>Login</h1>\n    <h3>\n        <font color=\"red\">{{ form.message }}</font>\n    </h3>\n    <table>\n        <tr>\n            <th>Login ID: </th>\n            <td><input type=\"text\" name=\"loginId\" [(ngModel)]=\"form.data.loginId\" /></td>\n        </tr>\n        <tr>\n            <th>Password: </th>\n            <td><input type=\"text\" name=\"password\" [(ngModel)]=\"form.data.password\" /></td>\n        </tr>\n        <tr>\n            <th></th>\n            <td>\n                <button (click)=\"signIn()\">signIn</button> &nbsp;\n                <button (click)=\"signUp()\">signUp</button>\n            </td>\n        </tr>\n    </table>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}